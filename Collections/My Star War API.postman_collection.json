{
	"info": {
		"_postman_id": "d9e1e6ab-1e2d-4c5c-9cd5-4ff52c5e5c61",
		"name": "My Star War API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get StarWarDev",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get StarWarDev Test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    // Console log response in html\r",
							"    const $ = cheerio.load(pm.response.text());\r",
							"    //output the html for testing\r",
							"    console.log($.html());\r",
							"\r",
							"    \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.dev/",
					"protocol": "https",
					"host": [
						"swapi",
						"dev"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get StarWarPeople-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get StarWarPeople-1 Test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"     pm.response.to.not.be.error;\r",
							"\r",
							"    // The response has all properties\r",
							"    // Parse the response JSON and test 8 properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Luke Skywalker');\r",
							"    pm.expect(responseJson.height).to.eql('172');\r",
							"    pm.expect(responseJson.mass).to.eql('77');\r",
							"    pm.expect(responseJson.hair_color).to.eql('blond');\r",
							"    pm.expect(responseJson.skin_color).to.eql('fair');\r",
							"    pm.expect(responseJson.eye_color).to.eql('blue');\r",
							"    pm.expect(responseJson.birth_year).to.eql('19BBY');\r",
							"    pm.expect(responseJson.gender).to.eql('male');\r",
							"\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.dev/api/people/1",
					"protocol": "https",
					"host": [
						"swapi",
						"dev"
					],
					"path": [
						"api",
						"people",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get StarWarPlanet-3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get StarWarPlanet-3 Test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"     pm.response.to.not.be.error;\r",
							"\r",
							"    // The response has all properties\r",
							"    // Parse the response JSON and test 8 properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Yavin IV');\r",
							"    pm.expect(responseJson.rotation_period).to.eql('24');\r",
							"    pm.expect(responseJson.orbital_period).to.eql('4818');\r",
							"    pm.expect(responseJson.diameter).to.eql('10200');\r",
							"    pm.expect(responseJson.climate).to.eql('temperate, tropical');\r",
							"    pm.expect(responseJson.gravity).to.eql('1 standard');\r",
							"    pm.expect(responseJson.terrain).to.eql('jungle, rainforests');\r",
							"    pm.expect(responseJson.surface_water).to.eql('8');\r",
							"\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.dev/api/planets/3/",
					"protocol": "https",
					"host": [
						"swapi",
						"dev"
					],
					"path": [
						"api",
						"planets",
						"3",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get StarWarShip-9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get StarWarShip-9 Test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"     pm.response.to.not.be.error;\r",
							"\r",
							"    // The response has all properties\r",
							"    // Parse the response JSON and test 8 properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql('Death Star');\r",
							"    pm.expect(responseJson.model).to.eql('DS-1 Orbital Battle Station');\r",
							"    pm.expect(responseJson.manufacturer).to.eql('Imperial Department of Military Research, Sienar Fleet Systems');\r",
							"    pm.expect(responseJson.cost_in_credits).to.eql('1000000000000');\r",
							"    pm.expect(responseJson.length).to.eql('120000');\r",
							"    pm.expect(responseJson.max_atmosphering_speed).to.eql('n/a');\r",
							"    pm.expect(responseJson.crew).to.eql('342,953');\r",
							"    pm.expect(responseJson.passengers).to.eql('843,342');\r",
							"\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.dev/api/starships/9/",
					"protocol": "https",
					"host": [
						"swapi",
						"dev"
					],
					"path": [
						"api",
						"starships",
						"9",
						""
					]
				}
			},
			"response": []
		}
	]
}