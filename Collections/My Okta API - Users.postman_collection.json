{
	"info": {
		"_postman_id": "f0f5712f-47e1-4d0c-9a33-6ef4c519b84a",
		"name": "My Okta API - Users",
		"description": "The [Okta User API](/docs/api/rest/users.html) provides operations to manage users in your organization.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "SSWS {{apikey}}"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/users/{{userId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"username\", pm.collectionVariables.get(\"qlu@rcm1.com\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Failed\r",
							"// pm.test(\"environment to be Okta Test\", function () {\r",
							"//     pm.expect(pm.environment.get(\"env\")).to.equal(\"Okta Test\");\r",
							"// });\r",
							"\r",
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    //pm.response.to.have.jsonBody('\"status\": \"ACTIVE\"');   //(\"platformadminrcm1com\"); // Failed\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.ok;\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// pm.test(\"Body matches string\", function () {\r",
							"//     pm.expect(pm.response.text()).to.include(\"qlurcm1com\");\r",
							"// });\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"// pm.test(\"Check if user id is correct\", function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData[0].id).to.eql(\"00u150pmzyKL8StsM1d7\");\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "SSWS {{apikey}}"
					}
				],
				"url": {
					"raw": "{{url}}/api/v1/users?q={{username}}&limit=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "q",
							"value": "{{username}}"
						},
						{
							"key": "limit",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		}
	]
}